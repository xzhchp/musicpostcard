package com.card.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class PostcardExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    public PostcardExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andPostcardIdIsNull() {
            addCriterion("postcard_id is null");
            return (Criteria) this;
        }

        public Criteria andPostcardIdIsNotNull() {
            addCriterion("postcard_id is not null");
            return (Criteria) this;
        }

        public Criteria andPostcardIdEqualTo(Integer value) {
            addCriterion("postcard_id =", value, "postcardId");
            return (Criteria) this;
        }

        public Criteria andPostcardIdNotEqualTo(Integer value) {
            addCriterion("postcard_id <>", value, "postcardId");
            return (Criteria) this;
        }

        public Criteria andPostcardIdGreaterThan(Integer value) {
            addCriterion("postcard_id >", value, "postcardId");
            return (Criteria) this;
        }

        public Criteria andPostcardIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("postcard_id >=", value, "postcardId");
            return (Criteria) this;
        }

        public Criteria andPostcardIdLessThan(Integer value) {
            addCriterion("postcard_id <", value, "postcardId");
            return (Criteria) this;
        }

        public Criteria andPostcardIdLessThanOrEqualTo(Integer value) {
            addCriterion("postcard_id <=", value, "postcardId");
            return (Criteria) this;
        }

        public Criteria andPostcardIdIn(List<Integer> values) {
            addCriterion("postcard_id in", values, "postcardId");
            return (Criteria) this;
        }

        public Criteria andPostcardIdNotIn(List<Integer> values) {
            addCriterion("postcard_id not in", values, "postcardId");
            return (Criteria) this;
        }

        public Criteria andPostcardIdBetween(Integer value1, Integer value2) {
            addCriterion("postcard_id between", value1, value2, "postcardId");
            return (Criteria) this;
        }

        public Criteria andPostcardIdNotBetween(Integer value1, Integer value2) {
            addCriterion("postcard_id not between", value1, value2, "postcardId");
            return (Criteria) this;
        }

        public Criteria andSongIdIsNull() {
            addCriterion("song_id is null");
            return (Criteria) this;
        }

        public Criteria andSongIdIsNotNull() {
            addCriterion("song_id is not null");
            return (Criteria) this;
        }

        public Criteria andSongIdEqualTo(Integer value) {
            addCriterion("song_id =", value, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdNotEqualTo(Integer value) {
            addCriterion("song_id <>", value, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdGreaterThan(Integer value) {
            addCriterion("song_id >", value, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("song_id >=", value, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdLessThan(Integer value) {
            addCriterion("song_id <", value, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdLessThanOrEqualTo(Integer value) {
            addCriterion("song_id <=", value, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdIn(List<Integer> values) {
            addCriterion("song_id in", values, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdNotIn(List<Integer> values) {
            addCriterion("song_id not in", values, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdBetween(Integer value1, Integer value2) {
            addCriterion("song_id between", value1, value2, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdNotBetween(Integer value1, Integer value2) {
            addCriterion("song_id not between", value1, value2, "songId");
            return (Criteria) this;
        }

        public Criteria andPostdateIsNull() {
            addCriterion("postdate is null");
            return (Criteria) this;
        }

        public Criteria andPostdateIsNotNull() {
            addCriterion("postdate is not null");
            return (Criteria) this;
        }

        public Criteria andPostdateEqualTo(Date value) {
            addCriterionForJDBCDate("postdate =", value, "postdate");
            return (Criteria) this;
        }

        public Criteria andPostdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("postdate <>", value, "postdate");
            return (Criteria) this;
        }

        public Criteria andPostdateGreaterThan(Date value) {
            addCriterionForJDBCDate("postdate >", value, "postdate");
            return (Criteria) this;
        }

        public Criteria andPostdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("postdate >=", value, "postdate");
            return (Criteria) this;
        }

        public Criteria andPostdateLessThan(Date value) {
            addCriterionForJDBCDate("postdate <", value, "postdate");
            return (Criteria) this;
        }

        public Criteria andPostdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("postdate <=", value, "postdate");
            return (Criteria) this;
        }

        public Criteria andPostdateIn(List<Date> values) {
            addCriterionForJDBCDate("postdate in", values, "postdate");
            return (Criteria) this;
        }

        public Criteria andPostdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("postdate not in", values, "postdate");
            return (Criteria) this;
        }

        public Criteria andPostdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("postdate between", value1, value2, "postdate");
            return (Criteria) this;
        }

        public Criteria andPostdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("postdate not between", value1, value2, "postdate");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andFeelLevelIsNull() {
            addCriterion("feel_level is null");
            return (Criteria) this;
        }

        public Criteria andFeelLevelIsNotNull() {
            addCriterion("feel_level is not null");
            return (Criteria) this;
        }

        public Criteria andFeelLevelEqualTo(Integer value) {
            addCriterion("feel_level =", value, "feelLevel");
            return (Criteria) this;
        }

        public Criteria andFeelLevelNotEqualTo(Integer value) {
            addCriterion("feel_level <>", value, "feelLevel");
            return (Criteria) this;
        }

        public Criteria andFeelLevelGreaterThan(Integer value) {
            addCriterion("feel_level >", value, "feelLevel");
            return (Criteria) this;
        }

        public Criteria andFeelLevelGreaterThanOrEqualTo(Integer value) {
            addCriterion("feel_level >=", value, "feelLevel");
            return (Criteria) this;
        }

        public Criteria andFeelLevelLessThan(Integer value) {
            addCriterion("feel_level <", value, "feelLevel");
            return (Criteria) this;
        }

        public Criteria andFeelLevelLessThanOrEqualTo(Integer value) {
            addCriterion("feel_level <=", value, "feelLevel");
            return (Criteria) this;
        }

        public Criteria andFeelLevelIn(List<Integer> values) {
            addCriterion("feel_level in", values, "feelLevel");
            return (Criteria) this;
        }

        public Criteria andFeelLevelNotIn(List<Integer> values) {
            addCriterion("feel_level not in", values, "feelLevel");
            return (Criteria) this;
        }

        public Criteria andFeelLevelBetween(Integer value1, Integer value2) {
            addCriterion("feel_level between", value1, value2, "feelLevel");
            return (Criteria) this;
        }

        public Criteria andFeelLevelNotBetween(Integer value1, Integer value2) {
            addCriterion("feel_level not between", value1, value2, "feelLevel");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table postcard
     *
     * @mbggenerated do_not_delete_during_merge Mon Jun 24 21:18:50 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table postcard
     *
     * @mbggenerated Mon Jun 24 21:18:50 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}